#!/usr/bin/env bash
set +x
set -e

bin_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
root_dir="$( cd "$bin_dir/.." && pwd )"

image="bandsintown/nginx"

help() {
  cat <<-EOH
  bin/$(basename "${0}") - Run tests for the nginx image

  test [--version]    Run tests for the specified version using docker-compose.
                      Expects /versions/{version}/Dockerfile|Dockerfile-tests to exist.
EOH
}

test_image() {
  local version="$1"
  local test_service="test-nginx"
  local dockerfile="${root_dir}/versions/${version}/Dockerfile"
  local dockerfile_tests="${root_dir}/versions/${version}/Dockerfile-tests"
  local base_image_name="${image}:${version}"
  local test_image_name="${image}-test:${version}"

  test -n "${version}" || { echo "Specify a version using --version"; exit 1; }
  test -f "${dockerfile}" || { echo "Dockerfile for v${version} doesn't exist"; exit 1; }
  test -f "${dockerfile_tests}" || { echo "Dockerfile for v${version} tests doesn't exist"; exit 1; }

  docker build -t "${base_image_name}" -f "${dockerfile}" .
  docker build -t "${test_image_name}" -f "${dockerfile_tests}" .

  docker-compose -f "${root_dir}/tests.yml" run --rm "${test_service}"
  docker-compose -f "${root_dir}/tests.yml" stop
  docker-compose -f "${root_dir}/tests.yml" rm -f

  docker rmi "${base_image_name}" && echo "Deleted image ${base_image_name}"
  docker rmi "${test_image_name}" && echo "Deleted image ${test_image_name}"
}

command="$1"

# Run the command
case "$command" in
  help)
    help
    ;;
  test)
    shift
    option="$1"

    case "$option" in
      --version)
        shift
        test_image "$@"
        ;;
      *)
        help;;
    esac
  ;;
  *)
    help
    ;;
esac
